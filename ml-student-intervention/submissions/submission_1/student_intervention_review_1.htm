<!DOCTYPE html>
<!-- saved from url=(0044)https://review.udacity.com/#!/reviews/205854 -->
<html data-ng-app="udacity.grading" data-enforce-browser="" class="ng-scope"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,[uib-popover-popup].popover.top-left > .arrow,[uib-popover-popup].popover.top-right > .arrow,[uib-popover-popup].popover.bottom-left > .arrow,[uib-popover-popup].popover.bottom-right > .arrow,[uib-popover-popup].popover.left-top > .arrow,[uib-popover-popup].popover.left-bottom > .arrow,[uib-popover-popup].popover.right-top > .arrow,[uib-popover-popup].popover.right-bottom > .arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0;}[uib-popover-popup].popover,[uib-popover-template-popup].popover{display:block !important;}</style><style type="text/css">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll;}</style><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
    <!--[if lte IE 9]>
    <script type="text/javascript">
      window.location = 'https://www.udacity.com/upgrade';
    </script>
    <![endif]-->
    <title>Udacity Reviews</title>

    <link rel="shortcut icon" href="https://review.udacity.com/assets/images/favicon.ico">
    <meta name="description" content="Discover online classes taught by top instructors and industry experts. Take courses at your own pace.">

    <meta name="robots" content="noodp">

    <!--
      These properties are here so social shares of review pages works
      properly. We decided to let them apply to every page on the site
      because we only expect people to share the review pages.

      Guidelines obtained from https://moz.com/blog/meta-data-templates-123
    -->

    <!-- facebook -->
    <meta property="og:title" content="Look at my Udacity Project Feedback!">
    <meta property="og:description" content="A review of my work and personalized tips to improve.">
    <meta property="og:image" content="https://s3-us-west-1.amazonaws.com/udacity-content/images/reviews/facebook-thumbnail-neutral.png ">

    <!-- twitter -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@udacity">
    <meta name="twitter:title" content="Udacity Project Feedback">
    <meta name="twitter:description" content="A review of my work and personalized tips to improve.">
    <!-- "Twitter Summary card images must be at least 120x120px" -->
    <meta name="twitter:image" content="https://s3-us-west-1.amazonaws.com/udacity-content/images/reviews/twitter-thumbnail-neutral.png ">

    <meta name="application-name" content="Udacity">
    <meta name="msapplication-TileColor" content="#FFFFFF">
    <meta name="msapplication-TileImage" content="assets/img/logos/udacity/windows_tile/udacity-full-144x144.png">

    <meta name="google-site-verification" content="ELX2btu3VElBKIdvkGj5ESBnJh_Dg9PnWjuCwVkPEkA">

    <meta http-equiv="X-UA-Compatible" content="requiresActiveX=true">

    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="apple-touch-icon" href="https://review.udacity.com/assets/images/apple-touch-icon.png">

    <link type="text/plain" rel="author" href="http://udacity.com/humans.txt">

    <link href="./student_intervention_review_1_files/css" rel="stylesheet" type="text/css">
    <link href="./student_intervention_review_1_files/css(1)" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="./student_intervention_review_1_files/udacity-base.min.css" type="text/css">
    <!-- ngIf: googleBranded -->

    <!-- inject:css -->
    <link rel="stylesheet" href="./student_intervention_review_1_files/grading_3841b78e.css">
    <!-- endinject -->

    <style>
    @font-face {
      font-family: 'Glyphicons Halflings';

      src: url('/assets/fonts/glyphicons/glyphicons-halflings-regular.eot');
      src: url('/assets/fonts/glyphicons/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('/assets/fonts/glyphicons/glyphicons-halflings-regular.woff2') format('woff2'), url('/assets/fonts/glyphicons/glyphicons-halflings-regular.woff') format('woff'), url('/assets/fonts/glyphicons/glyphicons-halflings-regular.ttf') format('truetype'), url('/assets/fonts/glyphicons/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');
    }
    </style>

  </head>
  <body data-modal-anti-scroll-helper="" class="responsive ng-class:{&#39;google-certs&#39;: googleBranded} ng-scope" ng-controller="MainCtrl as main">
    <!-- ngInclude: main.pageContext.headerURL --><div ng-include="main.pageContext.headerURL" class="ng-scope"><header class="navbar site-nav navbar-inverse navbar-static-top ng-scope" role="navigation"> <div class="container"> <div class="navbar-header"> <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse"> <span class="sr-only ng-scope" translate="">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="logo navbar-brand" href="https://udacity.com/" id="header-logo"> <img alt="Udacity Logo" src="./student_intervention_review_1_files/logo.min.svg"> </a> </div> <nav class="navbar-collapse collapse text-center-xs" id="navbar-collapse" role="navigation"> <ul class="nav navbar-nav navbar-right"> <!-- ngIf: isGrader() --> <!-- ngIf: isGrader() --> <li> <a data-ng-click="main.logout()" href="https://review.udacity.com/" translate="" class="ng-scope">Logout</a> </li> </ul> <ul class="nav navbar-nav navbar-right"> <li class="dropdown"> <ul class="dropdown-menu"> <a data-ng-click="main.logout()" href="https://review.udacity.com/" translate="" class="ng-scope">Logout</a> </ul> </li> </ul> </nav> </div> </header> </div>
    <div id="page-content" data-qualaroo-survey-info-hack="">
      <div loading-container="" class="container-fluid"><div ng-show="loading" class="row ng-hide"> <div class="col-sm-6 col-sm-offset-3 text-center"> <div class="row row-gap-huge"></div> <img src="./student_intervention_review_1_files/loading.gif"> <div class="row row-gap-huge"></div> </div> </div> <div ng-show="!loading" class=""> <div ng-transclude="">
        <div class="row row-gap-medium ng-scope ng-isolate-scope ng-hide fadeOutUp animated" ng-show="!!message &amp;&amp; !dismissed" ng-class="{fadeInDown: !!message, fadeOutUp: dismissed, animated: !!message || dismissed}" alert-box=""> <div class="col-md-offset-3 col-md-6"> <div class="alert alert-success hr-slim ng-binding"> <button type="button" ng-click="dismiss()" class="close" aria-label="Close"> <span aria-hidden="true">Ã—</span> </button> <img class="icon img-initial" src="./student_intervention_review_1_files/checkmark.svg"> </div> </div> </div>
        <!-- uiView:  --><div ui-view="" autoscroll="true" class="ng-scope"><div class="row ng-scope"> <div class="col-xs-12 col-lg-10 col-lg-offset-1"> <!-- ngIf: submission.previous_submission_id --> <div class="review-header"> <div class="project-label text-uppercase text-center">Project</div> <div class="project-name text-center ng-binding">Building a Student Intervention System</div> <!-- ngIf: currentProject.nanodegree_title --><div class="nanodegree-link text-center ng-binding ng-scope" ng-if="currentProject.nanodegree_title"> A part of the Machine Learning Engineer Nanodegree Program </div><!-- end ngIf: currentProject.nanodegree_title --> </div> <div class="row row-gap-medium"></div> <div class="review-container"> <ul class="nav nav-tabs nav-justified" ng-hide="isUngradeable()"> <!-- ngIf: hasFeedback --><li ng-if="hasFeedback" ng-class="{&#39;active&#39;: isCurrentTab(&#39;feedback&#39;)}" class="ng-scope active"> <a href="https://review.udacity.com/" ng-click="showTab(&#39;feedback&#39;)">Project Review</a> </li><!-- end ngIf: hasFeedback --> <!-- ngIf: showCode --><li ng-if="showCode" ng-class="{&#39;active&#39;: isCurrentTab(&#39;code&#39;)}" class="ng-scope"> <a href="https://review.udacity.com/" ng-click="showTab(&#39;code&#39;)"> Code Review&nbsp; <!-- ngIf: commentsCount > 0 --> </a> </li><!-- end ngIf: showCode --> <!-- ngIf: annotation_link --> <li ng-class="{&#39;active&#39;: isCurrentTab(&#39;notes&#39;)}"> <a href="https://review.udacity.com/" ng-click="showTab(&#39;notes&#39;)">Notes</a> </li> <!-- ngIf: userCanCreateAudits() && !auditTabState.visible --> <!-- ngIf: auditTabState.visible --> </ul> <div class="row review-tab-body"> <div class="col-sm-10 col-sm-offset-1"> <div ng-show="isUngradeable()" class="ungradeable-tab ng-hide"> <h3 class="result-label">Unable to review</h3> <p class="ungradeable-info"> Your project could not be reviewed. Please resubmit after you address the issue noted by the reviewer. </p> <p class="result-reason ng-isolate-scope" marked="submission.result_reason"></p> <div class="row row-gap-small"></div> <!-- ngIf: isResubmittable() --><div ng-if="isResubmittable()" class="row row-gap-small ng-scope"> <div class="col-xs-12 text-center"> <!-- ngIf: isResubmittable() --><a ng-if="isResubmittable()" ui-sref="rubrics.start({rubricId: currentRubric.id})" class="btn btn-primary visible-xs ng-scope" href="https://review.udacity.com/#!/rubrics/104/start"> <i class="glyphicon glyphicon-check"></i> Resubmit </a><!-- end ngIf: isResubmittable() --> <!-- ngIf: isResubmittable() --><button ng-if="isResubmittable()" ui-sref="rubrics.start({rubricId: currentRubric.id})" class="btn btn-primary hidden-xs ng-scope" href="#!/rubrics/104/start"> <i class="glyphicon glyphicon-check"></i> Resubmit Project </button><!-- end ngIf: isResubmittable() --> </div> </div><!-- end ngIf: isResubmittable() --> <!-- ngIf: submission.archive_url --><div ng-if="submission.archive_url" class="row row-gap-small ng-scope"> <div class="col-xs-12 text-center wide-and-bold"> <a href="https://udacity-github-sync-content.s3.amazonaws.com/_submissions/205854_4igsv.zip" download=""><img src="./student_intervention_review_1_files/download-icon.svg" class="img-initial icon-medium">Download project files</a> </div> </div><!-- end ngIf: submission.archive_url --> <!-- ngIf: submission.url --> <div class="row row-gap-small">&nbsp;</div> </div> <div ng-hide="isUngradeable()" class=""> <div class="row row-gap-medium"></div> <section ng-show="isCurrentTab(&#39;notes&#39;)" class="ng-hide"> <!-- ngIf: pastReviews !== undefined --><div reviews-list="" ng-if="pastReviews !== undefined" reviews="pastReviews" this-review="submission" class="ng-scope ng-isolate-scope"><h2 class="review-list-name current-review-name h-slim ng-binding">Review #1 (this review)</h2> <div ng-show="thisReview.completed_at"> <small class="text-muted">Reviewed <span am-time-ago="thisReview.completed_at">1 week ago</span></small> </div> <div ng-hide="thisReview.completed_at" class="ng-hide"> <small class="text-muted">Review in progress</small> </div> <div class="text-uppercase submission-notes-header"> student notes </div> <div class="submission-notes ng-isolate-scope" marked="thisReview.notes || &#39;_None provided_&#39;"><p>Please feel free to give me feedback on my approach of selecting the algorithms to achieve the desired outcomes.</p>
</div> <!-- ngIf: filteredReviews.length > 1 --><hr ng-if="filteredReviews.length &gt; 1" class="ng-scope"><!-- end ngIf: filteredReviews.length > 1 --> <!-- ngRepeat: review in filteredReviews --><!-- ngIf: filteredReviews.length > 1 --><div ng-if="filteredReviews.length &gt; 1" ng-repeat="review in filteredReviews" class="ng-scope"> <div class="row row-gap-small"> <div class="col-xs-12"> <!-- ngIf: !(thisReview && thisReview.id === review.id) --><a class="review-list-name ng-binding ng-scope" ng-if="!(thisReview &amp;&amp; thisReview.id === review.id)" ui-sref="reviews-show({submissionId: review.id, audit: null})" target="_blank" href="https://review.udacity.com/#!/reviews/206129"> Review #2 <!-- ngIf: review.previous_submission_id --> </a><!-- end ngIf: !(thisReview && thisReview.id === review.id) --> <!-- ngIf: thisReview && thisReview.id === review.id --> </div> </div> <div class="row"> <div ng-show="review.completed_at" class="col-xs-12 text-muted"> <small>Reviewed <span am-time-ago="review.completed_at">1 week ago</span></small> </div> <div ng-hide="review.completed_at" class="col-xs-12 text-muted ng-hide"> <small>Review in progress</small> </div> </div> </div><!-- end ngIf: filteredReviews.length > 1 --><!-- end ngRepeat: review in filteredReviews --><!-- ngIf: filteredReviews.length > 1 --><div ng-if="filteredReviews.length &gt; 1" ng-repeat="review in filteredReviews" class="ng-scope"> <div class="row row-gap-small"> <div class="col-xs-12"> <!-- ngIf: !(thisReview && thisReview.id === review.id) --> <!-- ngIf: thisReview && thisReview.id === review.id --><span class="review-list-name ng-scope" ng-if="thisReview &amp;&amp; thisReview.id === review.id"> This review <!-- ngIf: review.previous_submission_id --> </span><!-- end ngIf: thisReview && thisReview.id === review.id --> </div> </div> <div class="row"> <div ng-show="review.completed_at" class="col-xs-12 text-muted"> <small>Reviewed <span am-time-ago="review.completed_at">1 week ago</span></small> </div> <div ng-hide="review.completed_at" class="col-xs-12 text-muted ng-hide"> <small>Review in progress</small> </div> </div> </div><!-- end ngIf: filteredReviews.length > 1 --><!-- end ngRepeat: review in filteredReviews --> <div class="row row-gap-large"></div> </div><!-- end ngIf: pastReviews !== undefined --> </section> <section class="code-section ng-hide" ng-show="isCurrentTab(&#39;code&#39;)"> <!-- ngIf: files && currentRubric --><div code-review="" ng-if="files &amp;&amp; currentRubric" files="files" rubric="currentRubric" allow-comments="false" class="ng-scope ng-isolate-scope"><div ng-show="allowComments" class="ng-hide"> <input type="text" class="form-control ng-pristine ng-untouched ng-valid ng-empty" ng-model="filterPattern" placeholder="File filter (e.g. &quot;readme.md&quot;, &quot;.css&quot;, &quot;src/lib/*.js&quot;)"> <div class="row row-gap-small"></div> </div> <!-- ngRepeat: file in files --><div class="code-section-item ng-scope" ng-repeat="file in files" ng-show="isFileVisible(file)"> <div class="code-section-item-title" ng-click="setCurrentFileIndex($index)"> <small> <span ng-class="{&#39;glyphicon-triangle-right&#39;: currentFileIndex !== $index, &#39;glyphicon-triangle-bottom&#39;: currentFileIndex === $index}" class="glyphicon glyphicon-triangle-right"> </span> </small> <strong class="ng-binding">submissions/student_intervention_submission_1.html</strong> <!-- ngIf: file.comments_count > 0 --> </div> <!-- ngIf: currentFileIndex === $index --> </div><!-- end ngRepeat: file in files --><div class="code-section-item ng-scope" ng-repeat="file in files" ng-show="isFileVisible(file)"> <div class="code-section-item-title" ng-click="setCurrentFileIndex($index)"> <small> <span ng-class="{&#39;glyphicon-triangle-right&#39;: currentFileIndex !== $index, &#39;glyphicon-triangle-bottom&#39;: currentFileIndex === $index}" class="glyphicon glyphicon-triangle-right"> </span> </small> <strong class="ng-binding">README.md</strong> <!-- ngIf: file.comments_count > 0 --> </div> <!-- ngIf: currentFileIndex === $index --> </div><!-- end ngRepeat: file in files --> </div><!-- end ngIf: files && currentRubric --> <div class="row row-gap-medium"></div> </section> <section ng-show="isCurrentTab(&#39;annotation&#39;)" class="ng-hide"> <div class="row row-gap-large"> <div class="col-xs-12 annotation-text"> Your reviewer has provided annotations for your project </div> </div> <div class="row row-gap-medium"> <div class="col-xs-12"> <a class="btn btn-primary btn-sm" href="https://review.udacity.com/" download="" _target="_blank">Download annotations</a> </div> </div> <div class="row row-gap-huge"></div> </section> <!-- ngIf: critiquesAccessor --><section ng-if="critiquesAccessor" ng-show="isCurrentTab(&#39;feedback&#39;)" class="ng-scope"> <!-- ngIf: isSubmissionByCurrentUser() --><div social-share="" ng-if="isSubmissionByCurrentUser()" user-type="&#39;student&#39;" button-hashtag="hashtag" url="getShareableUrl()" prompt="&#39;Share your accomplishment&#39;" text="&#39;Just received helpful feedback on my project from a @Udacity reviewer!&#39;" class="ng-scope ng-isolate-scope"><div class="share-table hidden-xs"> <div class="share-prompt ng-binding"> Share your accomplishment </div> <div class="pull-right"> <a ng-click="showTwitterPopup()" class="btn btn-xs"> <img src="./student_intervention_review_1_files/twitter.svg"> </a> <a ng-click="showFacebookPopup()" class="btn btn-xs"> <img src="./student_intervention_review_1_files/facebook.svg"> </a> </div> </div> <div class="btn-block share-table visible-xs"> Share your accomplishment!&nbsp;<a href="https://review.udacity.com/" ng-click="showTwitterPopup()"><img src="./student_intervention_review_1_files/twitter.svg"></a>&nbsp;<a href="https://review.udacity.com/" ng-click="showFacebookPopup()"><img src="./student_intervention_review_1_files/facebook.svg"></a> </div> </div><!-- end ngIf: isSubmissionByCurrentUser() --> <!-- ngIf: isSubmissionGradedByCurrentUser() --> <!-- ngIf: hasFeedback && submission.result --><div ng-if="hasFeedback &amp;&amp; submission.result" class="ng-scope"> <h3 class="result-label h-slim-top ng-binding"> Requires Changes </h3> <!-- ngIf: doesNotMeetCount > 0 --><div ng-if="doesNotMeetCount &gt; 0" class="ng-scope"> <h4 class="result-label ng-binding"><span class="failed"></span>5 specifications require changes</h4> </div><!-- end ngIf: doesNotMeetCount > 0 --> </div><!-- end ngIf: hasFeedback && submission.result --> <!-- ngIf: submission.general_comment --><div ng-if="submission.general_comment" class="row row-gap-medium ng-scope"> <div class="col-xs-12 ng-isolate-scope" marked="submission.general_comment"><p>All in all this is a very good first submission, with some nice code implementations. There are a few adjustments to make in order to meet all the specs, but you're not far off from completion. Keep at it! <img src="./student_intervention_review_1_files/smiley.png" alt=":smiley:" title=":smiley:" class="emoji"></p>
</div> </div><!-- end ngIf: submission.general_comment --> <div critiques-editor="" critiques-accessor="critiquesAccessor" editable="false" class="ng-isolate-scope"><!-- ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Classification vs Regression </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student is able to correctly identify which type of prediction problem is required and provided reasonable justification.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Nice job "classifying" this <a href="http://scikit-learn.org/stable/tutorial/basic/tutorial.html" target="_blank">classification problem</a>. <img src="./student_intervention_review_1_files/wink.png" alt=":wink:" title=":wink:" class="emoji"></p>
<p>Let's hope that we can accurately predict which students pass vs fail, because there's good evidence that <a href="http://www.wsj.com/articles/a-small-fix-in-mind-set-can-keep-students-in-school-1466095795" target="_blank">student interventions actually work</a>.</p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Exploring the Data </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header failed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center failed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student response addresses the most important characteristics of the dataset and uses these characteristics to inform their decision making. Important characteristics must include:</p>
<ul>
<li>Number of data points</li>
<li>Number of features</li>
<li>Number of graduates</li>
<li>Number of non-graduates</li>
<li>Graduation rate</li>
</ul>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>You got most of these, but the number of features should not include our target column. </p>
<hr>
<p><strong>Suggestion: look at imbalanced target classes</strong><br>As you can see, we have an <a href="http://machinelearningmastery.com/tactics-to-combat-imbalanced-classes-in-your-machine-learning-dataset/" target="_blank">imbalanced proportion</a> of passes to fails and will want to make sure our training data and test data both have similar proportions of "yes" and "no" labels to mirror the overall data.</p>
<p>As a benchmark for our models' training, we can use the score from predicting all "yes" values (ie, student passed):</p>
<pre><code><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> f1_score
<span class="hljs-keyword">print</span> <span class="hljs-string">"\nF1 score for all 'yes' on students: {:.4f}"</span>.format(
    f1_score(y_true = [<span class="hljs-string">'yes'</span>]*n_passed + [<span class="hljs-string">'no'</span>]*n_failed, y_pred = [<span class="hljs-string">'yes'</span>]*n_students, pos_label=<span class="hljs-string">'yes'</span>, average=<span class="hljs-string">'binary'</span>))
</code></pre><pre><code><span class="hljs-constant">F1</span> score <span class="hljs-keyword">for</span> all <span class="hljs-string">'yes'</span> on <span class="hljs-symbol">students:</span> <span class="hljs-number">0</span>.<span class="hljs-number">8030</span>
</code></pre></div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Preparing the Data </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Code has been executed in the iPython notebook, with proper output and no errors.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p><strong>Pro tip: exploratory dataviz</strong><br>Although the project template doesn't go into <a href="https://en.wikipedia.org/wiki/Exploratory_data_analysis" target="_blank">exploratory data analysis (EDA)</a> that much, it's usually a <a href="http://www.sharpsightlabs.com/machine-learning-prerequisite-isnt-math/" target="_blank">big part of any data analysis project</a>. </p>
<p>One nice method to explore is <a href="https://stanford.edu/~mwaskom/software/seaborn/examples/grouped_violinplots.html" target="_blank">violin plots in the seaborn package</a>. Below you can see an example of looking at the distribution of ages for students, with separate plots for each 'sex' and. Failed students are shaded yellow and passing students are shaded blue...</p>
<pre><code><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns
%matplotlib inline
sns.set(style=<span class="hljs-string">"whitegrid"</span>, color_codes=<span class="hljs-keyword">True</span>)

<span class="hljs-comment"># Draw a nested violinplot and split the violins for easier comparison</span>
sns.violinplot(x=<span class="hljs-string">"sex"</span>, y=<span class="hljs-string">"age"</span>, hue=<span class="hljs-string">"passed"</span>, data=student_data, split=<span class="hljs-keyword">True</span>,
               inner=<span class="hljs-string">"quart"</span>, palette={<span class="hljs-string">"yes"</span>: <span class="hljs-string">"b"</span>, <span class="hljs-string">"no"</span>: <span class="hljs-string">"r"</span>})
sns.despine(left=<span class="hljs-keyword">True</span>)
</code></pre><p><a href="./student_intervention_review_1_files/index.png" target="_blank"><img src="./student_intervention_review_1_files/index.png" alt="grouped-violin"></a></p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Training and test sets have been generated by randomly sampling the overall dataset.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Terrific job here creating the train and test sets, setting a random state so that your results are reproducible by others!</p>
<p><strong>Pro tip: stratify the data</strong><br>To preserve the percentage of samples for each class between the train and test sets, you could <a href="http://stackoverflow.com/questions/29438265/stratified-train-test-split-in-scikit-learn" target="_blank">use the "stratify" parameter</a> in <code>train_test_split</code>...</p>
<pre><code>from sklearn.cross_validation import train_<span class="hljs-built_in">test</span>_split
X_train, X_<span class="hljs-built_in">test</span>, y_train, y_<span class="hljs-built_in">test</span> = train_<span class="hljs-built_in">test</span>_split(X_all, y_all, stratify=y_all, <span class="hljs-built_in">test</span>_size=<span class="hljs-number">0.24</span>, random_state=<span class="hljs-number">42</span>)

<span class="hljs-built_in">print</span> <span class="hljs-string">"Grad rate of the training set: {:.2f}%"</span>.format(<span class="hljs-number">100</span> * (y_train == <span class="hljs-string">'yes'</span>).mean())
<span class="hljs-built_in">print</span> <span class="hljs-string">"Grad rate of the testing set: {:.2f}%"</span>.format(<span class="hljs-number">100</span> * (y_<span class="hljs-built_in">test</span> == <span class="hljs-string">'yes'</span>).mean())
</code></pre><pre><code>Grad rate of the training <span class="hljs-operator"><span class="hljs-keyword">set</span>: <span class="hljs-number">67.00</span>%
Grad rate <span class="hljs-keyword">of</span> the testing <span class="hljs-keyword">set</span>: <span class="hljs-number">67.37</span>%</span>
</code></pre><hr>
<p>With your current train/test splits, we get the following class imbalances instead...</p>
<pre><code>Grad rate of the training <span class="hljs-operator"><span class="hljs-keyword">set</span>: <span class="hljs-number">66.67</span>%
Grad rate <span class="hljs-keyword">of</span> the testing <span class="hljs-keyword">set</span>: <span class="hljs-number">68.42</span>%</span>
</code></pre></div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Training and Evaluating Models </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header failed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center failed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Three supervised models are chosen with reasonable justification. Pros and cons for the use of each model are provided, along with discussion of general applications for each model.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p><strong>re: Question 2</strong><br>Good start to the discussion here, but for each model make sure to mention:<br>(1) the <a href="https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms" target="_blank">strengths and weaknesses</a> of the models,<br>(2)  at least one of their <a href="http://blog.udacity.com/2016/06/machine-learning-everywhere-netflix-personalized-medicine-fraud-prevention.html" target="_blank">general applications</a>,<br>(3) explicit reasons why each model in particular is <a href="http://sebastianraschka.com/faq/docs/best-ml-algo.html" target="_blank">appropriate to use with our data</a> â€” eg, things like the dimensions of the dataset, model interpretability, model accuracy/effectiveness.</p>
<p>Here are some points that could be made for Naive Bayes...</p>
<h3 id="naive-bayes">Naive Bayes</h3>
<h4 id="general-applications">General Applications</h4>
<ul>
<li>Has many general business applications in solving classification problems such as email spam detection, sentiment analysis, and medical diagnosis.</li>
</ul>
<h4 id="strengths">Strengths</h4>
<ul>
<li>Naive Bayes models are fast and easy to train, and are fast to perform predictions.</li>
</ul>
<h4 id="weaknesses">Weaknesses</h4>
<ul>
<li>The model assumes independence among the features (however, even if features are not entirely independent, the model <a href="http://stats.stackexchange.com/questions/23490/why-do-naive-bayesian-classifiers-perform-so-well" target="_blank">can still perform well</a>).</li>
</ul>
<h4 id="reasons-for-choosing">Reasons for Choosing</h4>
<ul>
<li>Given our small dataset, it would be better to train with a high bias classifier.</li>
<li>The model also has the advantage of being interpretable to a non-technical audience like the school board.</li>
</ul>
<hr>
<p>See below for some additional resources you could check out to help develop your answers:</p>
<ol>
<li>SVM<ul>
<li><a href="http://cs229.stanford.edu/notes/cs229-notes3.pdf" target="_blank">http://cs229.stanford.edu/notes/cs229-notes3.pdf</a></li>
<li><a href="https://www.quantstart.com/articles/Support-Vector-Machines-A-Guide-for-Beginners" target="_blank">https://www.quantstart.com/articles/Support-Vector-Machines-A-Guide-for-Beginners</a></li>
</ul>
</li>
<li>KNN<ul>
<li><a href="https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms" target="_blank">https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms</a></li>
<li><a href="https://saravananthirumuruganathan.wordpress.com/2010/05/17/a-detailed-introduction-to-k-nearest-neighbor-knn-algorithm/" target="_blank">https://saravananthirumuruganathan.wordpress.com/2010/05/17/a-detailed-introduction-to-k-nearest-neighbor-knn-algorithm/</a></li>
</ul>
</li>
<li>Random Forest (be sure to specifically discuss Random Forest -- "Ensemble" covers a broad variety of classifiers that also include adaboost and gradient boosting)<ul>
<li><a href="http://blog.yhat.com/posts/random-forests-in-python.html" target="_blank">http://blog.yhat.com/posts/random-forests-in-python.html</a></li>
<li><a href="https://www.quora.com/When-is-a-random-forest-a-poor-choice-relative-to-other-algorithms" target="_blank">https://www.quora.com/When-is-a-random-forest-a-poor-choice-relative-to-other-algorithms</a></li>
</ul>
</li>
</ol>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header failed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center failed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>All the required time and F1 scores for each model and training set sizes are provided within the chart given. The performance metrics are reasonable relative to other models measured.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Excellent work generating the results and displaying in tabular format, but in order to make your results reproducible by others, make sure you also specify random states for any classifiers as needed.</p>
<p>Also, it's fine to experiment with model tuning at this point, but results should be displayed for the performance of each model using its default parameters.</p>
<hr>
<p><strong>Suggestion: simplify with loops</strong><br>We can also simplify the implementation a bit by using loops to generate the results...</p>
<pre><code><span class="hljs-comment"># loop thru models, then thru train sizes</span>
<span class="hljs-keyword">for</span> clf <span class="hljs-keyword">in</span> [clf_A, clf_B, clf_C]:
    <span class="hljs-built_in">print</span> <span class="hljs-string">"\n{}: \n"</span>.format(clf.__class__.__name__)
    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> [<span class="hljs-number">100</span>, <span class="hljs-number">200</span>, <span class="hljs-number">300</span>]:
        train_predict(clf, X_train[:n], y_train[:n], X_<span class="hljs-built_in">test</span>, y_<span class="hljs-built_in">test</span>)
</code></pre></div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Choosing the Best Model </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Justification is provided for which model seems to be the best by comparing the computational cost and accuracy of each model.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Good justification of your model choice by looking at both accuracy and computational cost/time! </p>
<p><strong>Suggestion:  Use a benchmark </strong><br>Another thing we can do is compare the results of the models with a benchmark such as predicting all "yes" values on the test set...</p>
<pre><code><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> f1_score
<span class="hljs-keyword">print</span> <span class="hljs-string">"F1 score for predicting all \"yes\" on test set: {:.4f}"</span>.format(
    f1_score(y_test, [<span class="hljs-string">'yes'</span>]*len(y_test), pos_label=<span class="hljs-string">'yes'</span>, average=<span class="hljs-string">'binary'</span>))
</code></pre><pre><code>F1 score <span class="hljs-keyword">for</span> predicting all <span class="hljs-string">"yes"</span> on <span class="hljs-built_in">test</span> <span class="hljs-built_in">set</span>: <span class="hljs-number">0.8125</span>
</code></pre></div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header failed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center failed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student is able to clearly and concisely describe how the optimal model works in laymen terms to someone what is not familiar with machine learning nor has a technical background.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p><strong>re: Question 4</strong>  </p>
<p>You've got a great discussion that uses the appropriate level of discussion for a non-technical audience, but you could provide a little more detail about how the model learns and predicts to give the school board a better picture of what's going on.</p>
<p>Here's an idea of the level of discussion we're looking for:<br><a href="https://www.quora.com/What-is-AdaBoost" target="_blank">https://www.quora.com/What-is-AdaBoost</a></p>
<p>It would help to explicitly mention how our model is trained with information we know about past students who passed/failed, and then how it's used to predict outcomes for new students. Below are some examples of images and details that could be discussed...</p>
<ol>
<li><p>The SVM takes data about past students (age, gender, family, etc), and uses them to create a function that draws a boundary between the students who graduated and those who did not. The boundary should be drawn so as to maximize the... <em>&lt;&lt;add your own discussion&gt;&gt;</em><br><a href="./student_intervention_review_1_files/optimal-hyperplane.png" target="_blank"><img src="./student_intervention_review_1_files/optimal-hyperplane.png" alt=""></a></p>
</li>
<li><p>Often, though, it's not easy to draw a decision boundary in low dimensions, so the SVM separates the passing and failing students by... <em>&lt;&lt;add your own discussion&gt;&gt;</em><br><a href="./student_intervention_review_1_files/1gvce.png" target="_blank"><img src="./student_intervention_review_1_files/1gvce.png" alt=""></a></p>
</li>
<li><p>Using this function created with students we already know graduated or not, the SVM can look at new students' data and predict... <em>&lt;&lt;add your own discussion&gt;&gt;</em></p>
</li>
</ol>
<hr>
<p>See here for more ideas on explaining SVM's:</p>
<ul>
<li><a href="https://www.quora.com/What-does-support-vector-machine-SVM-mean-in-laymans-terms" target="_blank">quora</a></li>
<li><a href="http://www.statsoft.com/Textbook/Support-Vector-Machines" target="_blank">statsoft textbook</a></li>
</ul>
<p><strong>Note</strong>: Images can greatly enhance the understanding of many ML algorithms, and you can insert image urls in markdown like this...</p>
<pre><code>![<span class="hljs-link_label">SVM</span>](<span class="hljs-link_url">https://udacity-github-sync-content.s3.amazonaws.com/_imgs/19273/1468014011/optimal-hyperplane.png</span>)
</code></pre></div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header failed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center failed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>The final model chosen is correctly tuned using gridsearch with at least one parameter using at least three settings. If the model does not need any parameter tuning it is explicitly stated with reasonable justification.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>The grid search code looks generally solid, but this line is generating an error (possibly you were using it to test out multiple grid searches?)...</p>
<pre><code><span class="hljs-constant">clf_2</span> = grid_obj_2.best_estimator_
</code></pre><hr>
<p><strong>Suggestion: show best parameters found</strong><br>After the grid search, you could also output the best parameters found using something like <code>grid_obj.best_params_</code> or simply <code>print clf</code>.</p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>The F1 score is provided from the tuned model and performs approximately as well or better than the default model chosen.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Great job improving the F1 test score! It looks like model tuning really helped us here.</p>
<p><strong>Suggestion: scale the features</strong><br><a href="http://sebastianraschka.com/faq/docs/when-to-standardize.html" target="_blank">Feature scaling</a> can often have a big impact on the performance of machine learning algorithms. You might also experiment with trying to improve the F1 even more by first <a href="http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.Normalizer.html" target="_blank">normalizing the features</a>...</p>
<pre><code>from sklearn.preprocessing import Normalizer

normer = Normalizer()
X<span class="hljs-keyword">_t</span>rain = normer.<span class="hljs-keyword">fit_t</span>ransform(X<span class="hljs-keyword">_t</span>rain)
X<span class="hljs-keyword">_t</span>est = normer.transform(X<span class="hljs-keyword">_t</span>est)
</code></pre><p>Here's more reading on <a href="http://machinelearningmastery.com/rescaling-data-for-machine-learning-in-python-with-scikit-learn/" target="_blank">scaling and normalizing</a>, and a description of <a href="http://scikit-learn.org/stable/auto_examples/svm/plot_rbf_parameters.html" target="_blank">SVM parameter tuning</a> with scikit-learn.</p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Quality of Code </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Code reflects the description in the documentation.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --> <div class="row"> <!-- ngIf: !editable && submission.general_comment --> </div> <div class="row"> <!-- ngIf: !(state && state.audit) --><ng-form ng-if="!(state &amp;&amp; state.audit)" name="general-comment-form" class="ng-pristine ng-valid ng-scope"> <!-- ngIf: editable --> </ng-form><!-- end ngIf: !(state && state.audit) --> </div> <div class="row row-gap-small"></div> </div> <div class="row row-gap-small"></div> <!-- ngIf: isResubmittable() --><div ng-if="isResubmittable()" class="row row-gap-small ng-scope"> <div class="col-xs-12 text-center"> <!-- ngIf: isResubmittable() --><a ng-if="isResubmittable()" ui-sref="rubrics.start({rubricId: currentRubric.id})" class="btn btn-primary visible-xs ng-scope" href="https://review.udacity.com/#!/rubrics/104/start"> <i class="glyphicon glyphicon-check"></i> Resubmit </a><!-- end ngIf: isResubmittable() --> <!-- ngIf: isResubmittable() --><button ng-if="isResubmittable()" ui-sref="rubrics.start({rubricId: currentRubric.id})" class="btn btn-primary hidden-xs ng-scope" href="#!/rubrics/104/start"> <i class="glyphicon glyphicon-check"></i> Resubmit Project </button><!-- end ngIf: isResubmittable() --> </div> </div><!-- end ngIf: isResubmittable() --> <div class="row row-gap-small"> <div class="col-xs-12 text-center"> <!-- ngIf: submission.archive_url --><a class="wide-and-bold ng-scope" ng-if="submission.archive_url" href="https://udacity-github-sync-content.s3.amazonaws.com/_submissions/205854_4igsv.zip" download=""> <img src="./student_intervention_review_1_files/download-icon.svg" class="icon-medium">&nbsp;Download Project </a><!-- end ngIf: submission.archive_url --> </div> </div> <div class="row row-gap-medium"></div> </section><!-- end ngIf: critiquesAccessor --> <section ng-show="isCurrentTab(&#39;audit&#39;)" class="ng-hide"> <div audit-tab="" submission="submission" state="auditTabState" class="ng-isolate-scope"><!-- ngIf: auditCritiquesAccessor --> </div> </section> </div>  </div>  </div>  </div>  </div>  </div>  <div ng-show="isCurrentTab(&#39;feedback&#39;) || isUngradeable()" class="ng-scope"> <!-- ngIf: !hasViewedResubmissionVideo() && isResubmittable() --><div ng-if="!hasViewedResubmissionVideo() &amp;&amp; isResubmittable()" class="row row-gap-small ng-scope"> <div class="col-md-8 col-md-offset-2"> <div class="row"> <div class="col-md-3"> <div class="thumbnail thumbnail-bordered t-slim"> <img src="./student_intervention_review_1_files/resubmission-video.jpg"> </div> </div> <div class="col-md-9"> <h3>Best practices for your project resubmission</h3> <p>Ben shares 5 helpful tips to get you through revising and resubmitting your project.</p> <p class="caption"> <a href="https://review.udacity.com/" ng-click="showResubmissionVideo()"> <i class="glyphicon glyphicon-play-circle"></i>&nbsp;Watch Video </a> (3:01) </p> </div> </div> </div> </div><!-- end ngIf: !hasViewedResubmissionVideo() && isResubmittable() --> </div> <!-- ngIf: hasViewedResubmissionVideo() && isResubmittable() || isSubmissionByCurrentUser() --><div ng-if="hasViewedResubmissionVideo() &amp;&amp; isResubmittable() || isSubmissionByCurrentUser()" class="row row-gap-medium ng-scope"> <div class="col-md-10 col-md-offset-1 text-center"> <!-- ngIf: hasViewedResubmissionVideo() && isResubmittable() --> <!-- ngIf: isSubmissionByCurrentUser() --><p class="slim ng-scope" ng-if="isSubmissionByCurrentUser()"> Have a question about your review? Email us at <a href="mailto:review-support@udacity.com">review-support@udacity.com</a> and include the link to this review. </p><!-- end ngIf: isSubmissionByCurrentUser() --> </div> </div><!-- end ngIf: hasViewedResubmissionVideo() && isResubmittable() || isSubmissionByCurrentUser() --> <div class="row row-gap-large ng-scope"></div> <!-- ngIf: isSubmissionByCurrentUser() && currentProject.nanodegree_key --><div ng-if="isSubmissionByCurrentUser() &amp;&amp; currentProject.nanodegree_key" class="row row-gap-medium ng-scope"> <div class="col-xs-12 text-center"> <a class="btn btn-secondary" ng-click="goToPath()" "="">Return to Path</a> </div> </div><!-- end ngIf: isSubmissionByCurrentUser() && currentProject.nanodegree_key -->  <div class="visible-xs row row-gap-medium ng-scope"> <div class="col-xs-12"> <div ng-show="!isUngradeable() &amp;&amp; showStudentFeedback" class="locked-feedback-footer ng-hide"> <div ng-switch="hoverValue"> <!-- ngSwitchWhen: 1 --> <!-- ngSwitchWhen: 2 --> <!-- ngSwitchWhen: 3 --> <!-- ngSwitchWhen: 4 --> <!-- ngSwitchWhen: 5 --> <!-- ngSwitchDefault:  --><span ng-switch-default="" class="ng-scope">Rate this review</span><!-- end ngSwitchWhen: --> </div> <div class="star-rating"> <span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="5" aria-valuenow="0" aria-valuetext="" uib-rating="" state-on="&#39;feedback-star-on&#39;" state-off="&#39;feedback-star-off&#39;" on-leave="hoverValue = null" on-hover="hoverValue = value" ng-model="studentFeedback.rating" class="ng-isolate-scope ng-not-empty ng-valid">
    <!-- ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="one"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="two"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="three"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="four"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="five"></i><!-- end ngRepeat: r in range track by $index -->
</span> </div> </div> </div> </div> <!-- ngIf: shouldShowAssessmentFooter() --><footer sticky-footer="" ng-if="shouldShowAssessmentFooter()" class="row hidden-xs ng-scope sticky-footer"> <div ng-show="!isUngradeable() &amp;&amp; showStudentFeedback" class="floating-feedback-footer ng-hide"> <div ng-switch="hoverValue"> <!-- ngSwitchWhen: 1 --> <!-- ngSwitchWhen: 2 --> <!-- ngSwitchWhen: 3 --> <!-- ngSwitchWhen: 4 --> <!-- ngSwitchWhen: 5 --> <!-- ngSwitchDefault:  --><span ng-switch-default="" class="ng-scope">Rate this review</span><!-- end ngSwitchWhen: --> </div> <div class="star-rating"> <span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="5" aria-valuenow="0" aria-valuetext="" uib-rating="" state-on="&#39;feedback-star-on&#39;" state-off="&#39;feedback-star-off&#39;" on-leave="hoverValue = null" on-hover="hoverValue = value" ng-model="studentFeedback.rating" class="ng-pristine ng-untouched ng-valid ng-isolate-scope ng-not-empty">
    <!-- ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="one"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="two"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="three"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="four"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="five"></i><!-- end ngRepeat: r in range track by $index -->
</span> </div> </div> </footer><!-- end ngIf: shouldShowAssessmentFooter() --> <div class="row row-gap-medium ng-scope"></div> <div id="comment-wrapper" class="ng-scope"></div> </div>
      </div> </div> </div>
    </div>

    <!-- ngInclude: main.pageContext.footerURL --><div ng-include="main.pageContext.footerURL" class="ng-scope"><footer id="footer" ng-controller="FooterCtrl as ctrl" class="ng-scope"> <div class="container"> <ul class="nav nav-pills"> <!-- ngIf: currentUser && currentUser.role !== 'student' --> <li><a ui-sref="submissions.student-faq" href="https://review.udacity.com/#!/submissions/student-faq">Student FAQ</a></li> </ul> </div> </footer> </div>

    <script src="./student_intervention_review_1_files/jquery.min.js"></script>
    <script src="./student_intervention_review_1_files/materialize.min.js"></script>

    <script type="text/javascript" src="./student_intervention_review_1_files/airbrake-shim.js" data-airbrake-project-id="108424" data-airbrake-project-key="585b2c42b7a3ccfb360e6b1461185702" data-airbrake-environment-name="production"></script>
    <script data-airbrake-onload="initAirbrake">
      function initAirbrake() {
        Airbrake.addFilter(function (notice) {
          console.log(notice);
          return true;
        });
      }
    </script>
    <script src="./student_intervention_review_1_files/angular.min.js"></script>

    <!-- inject:js -->
    <script src="./student_intervention_review_1_files/_vendor_891f0480.js"></script>
    <script src="./student_intervention_review_1_files/grading_891f0480.js"></script>
    <script src="./student_intervention_review_1_files/airbrake-shim.js"></script>
    <!-- endinject -->


<div class="hiddendiv common"></div></body></html>
